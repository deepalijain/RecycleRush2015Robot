/*
 * DriveDistanceCommand.h
 *
 *  Created on: Jan 29, 2015
 *      Author: Ligerbots
 */

#ifndef SRC_COMMANDS_DRIVEDISTANCECOMMAND_H_
#define SRC_COMMANDS_DRIVEDISTANCECOMMAND_H_





#endif /* SRC_COMMANDS_DRIVEDISTANCECOMMAND_H_ */
// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVEDISTANCECOMMAND_H
#define DRIVEDISTANCECOMMAND_H



#include "../Robot.h"
#include "DriveCommand.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class DriveDistanceCommand: public Command {
private:
	double distanceL;
	double distanceR;
	bool isCommandDone;
	double distanceError;
	double remainingDistance;
	double voltageLeft = 0.0;
	double voltageRight = 0.0;
	double maxVoltage = 0.8;
	double timeStep = 0.02;
	double secondsToMax = 1.5;
	// Just make voltageStep 1.0 and let the voltage ramp rate handle it.
	//double voltageStep = maxVoltage/(secondsToMax/timeStep);
	double voltageStep = 1.0;
	double wheelDiam = 6.25;
	double distancePerRev = 3.1416*wheelDiam;
	double inchesPerTick = distancePerRev/7680;
	// If we're off by 1 inch, increase the voltage by 0.05
	double voltageScale = 0.05;
	int ticks = 0;
public:
	DriveDistanceCommand(double distL, double distR);
	virtual void Initialize();
	virtual void Execute();
	virtual bool IsFinished();
	virtual void End();
	virtual void Interrupted();
	double distanceTravelledL;
	double distanceTravelledR;
};

#endif
