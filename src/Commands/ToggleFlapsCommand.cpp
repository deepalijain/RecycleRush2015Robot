// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ToggleFlapsCommand.h"

bool ToggleFlapsCommand::armFlapUp = true;

ToggleFlapsCommand::ToggleFlapsCommand(int i) {
	Requires(Robot::armFlaps);
	commandType = i;	// 0 = toggle, +1 open (widen), -1 close (narrow)
}

// Called just before this Command runs the first time
void ToggleFlapsCommand::Initialize() {
}

// Called repeatedly when this Command is scheduled to run
void ToggleFlapsCommand::Execute() {
	switch (commandType) {
		case 0:
			// toggle -- we're not using this one
			if (armFlapUp) {
				Robot::armFlaps->ArmFlapDown();
				printf("Arm Flap Down");
			}
			else {
				Robot::armFlaps->ArmFlapUp();
				printf("ArmFlapUp");
			}
			armFlapUp = !armFlapUp;
			SmartDashboard::PutBoolean("armFlapUp",armFlapUp);
			break;
		case 1:
			// open (widen), which the kids called "down"
			Robot::armFlaps->ArmFlapDown();
			printf("Arm Flap Down");
			armFlapUp = false;
			break;
		case -1:
			// close (narrow), which the kids called "up"
			Robot::armFlaps->ArmFlapUp();
			printf("ArmFlapUp");
			armFlapUp = true;
			break;
	}
}

// Make this return true when this Command no longer needs to run execute()
bool ToggleFlapsCommand::IsFinished() {
	return true;
}

// Called once after isFinished returns true
void ToggleFlapsCommand::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ToggleFlapsCommand::Interrupted() {

}
