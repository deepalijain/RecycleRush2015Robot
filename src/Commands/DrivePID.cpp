// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DrivePID.h"
#include "../Robot.h"

DrivePID::DrivePID(int _ticks) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveSubsystem);
	ticks = _ticks;
	currentTime=0;
	isFinished=false;
	firstTime = true;
}

// Called just before this Command runs the first time
void DrivePID::Initialize() {
	SetTimeout(15000);  // set 15 second timeout. Good enough?
}

// Called repeatedly when this Command is scheduled to run
void DrivePID::Execute(){

	Robot::driveSubsystem->SetPIDDistance( double(ticks), double(ticks));

}

// Make this return true when this Command no longer needs to run execute()
bool DrivePID::IsFinished() {
	if(Robot::oi->joystick1->GetY() != 0.0 || Robot::oi->joystick1->GetRawAxis(4) != 0.0)
		{
			return true;
		}
	return false;
}

// Called once after isFinished returns true
void DrivePID::End() {
	RobotMap::driveBackLeft->SetControlMode(CANSpeedController::kPercentVbus);
	RobotMap::driveBackRight->SetControlMode(CANSpeedController::kPercentVbus);

	Robot::driveCommand->Start();

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DrivePID::Interrupted() {
	End();
}
