// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "../Robot.h"
#include "DelayCommand.h"

Delay *Robot::delaySubsystem;

DelayCommand::DelayCommand(double t) : _delayPeriod(t) {
	Requires(Robot::delaySubsystem);
}

// Called just before this Command runs the first time
void DelayCommand::Initialize() {

	printf("Delay init'd for %1.2f seconds\n", _delayPeriod);
	SetInterruptible(false);
	//SetTimeout(_delayPeriod);
	_ticks = 0;
}

// Called repeatedly when this Command is scheduled to run
void DelayCommand::Execute() {
}

// Make this return true when this Command no longer needs to run execute()
bool DelayCommand::IsFinished() {
	return ((++_ticks/50.0 >= _delayPeriod));
	//return IsTimedOut();
}

// Called once after isFinished returns true
void DelayCommand::End() {
	printf("Delay Done at %d\n", _ticks);
	_ticks = 0;
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DelayCommand::Interrupted() {
	printf("Delay INTERRUPTED at %d\n", _ticks);
}
